<Activity mc:Ignorable="sap sap2010" x:Class="GetAttachments" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="OUT_ProjectFolder" Type="OutArgument(x:String)" />
    <x:Property Name="OUT_Email" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1413.6,1805.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetAttachments_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="18">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow for downloading attachments from mails with subject line &quot;Techno Computers&quot;, and save them in folders according to the month of the invoice, in the invoices folder, in the project folder which is decleared in the &quot;ProjectFolder&quot; asset in the orchestrator.&#xA;pre-condition: Credential value of email and password, and the project folder location &quot;ProjectFolder&quot; asset from orchestrator.&#xA;post-action: Sending out project folder location, email, and password, and creating a sorted folders containing invoices." DisplayName="GetAttachments" sap:VirtualizedContainerService.HintSize="1393.6,1745.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ss:SecureString" Name="password" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="Mails" />
      <Variable x:TypeArguments="x:String" Name="AttachmentName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="Invoices Email" DisplayName="Get Email &amp; passsword credentials" sap:VirtualizedContainerService.HintSize="1352,22.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[password]" Username="[OUT_Email]" />
    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="ProjectFolder" DisplayName="Get project folder directory" sap:VirtualizedContainerService.HintSize="1352,22.4" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:String">[OUT_ProjectFolder]</OutArgument>
      </ui:GetRobotAsset.Value>
    </ui:GetRobotAsset>
    <ui:GetOutlookMailMessages Filter="{x:Null}" TimeoutMS="{x:Null}" Account="[OUT_Email]" sap2010:Annotation.AnnotationText="Get only unread mails and mark them as read" DisplayName="Get Outlook Mail Messages" GetAttachements="False" sap:VirtualizedContainerService.HintSize="1352,66.4" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="Inbox" MarkAsRead="True" Messages="[Mails]" OnlyUnreadMessages="True" Top="30">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetOutlookMailMessages>
    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each loop for mails" sap:VirtualizedContainerService.HintSize="1352,1345.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Mails]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="snm:MailMessage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="mail" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1316.8,1211.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If sap2010:Annotation.AnnotationText="If condition to check for unread mails with subject line &quot;Techno computers&quot; and download the attachment in a folder named &quot;invoices&quot; in the project folder." Condition="[mail.Subject.Contains(&quot;Techno Computers&quot;)]" DisplayName="If condition for checking subject line name" sap:VirtualizedContainerService.HintSize="1275.2,1118.4" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="897.6,937.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="NameMatch" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Get invoice name" sap:VirtualizedContainerService.HintSize="856,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[AttachmentName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[CType(mail.Attachments.FirstOrDefault, Attachment).Name]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Split .pdf from the name" sap:VirtualizedContainerService.HintSize="856,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[AttachmentName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Split(AttachmentName,".")(0).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:IsMatch BuilderPattern="[\sa-zA-z]+_[0-3][0-9][0-1][0-9]\d{4}_\d+" DisplayName="Check if the naming matches our naming pattern" sap:VirtualizedContainerService.HintSize="856,60" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[AttachmentName]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;[\\sa-zA-z]+_[0-3][0-9][0-1][0-9]\\d{4}_\\d+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[\sa-zA-z]+_[0-3][0-9][0-1][0-9]\d{4}_\d+" RegexOption="IgnoreCase" Result="[NameMatch]" />
                  <If sap2010:Annotation.AnnotationText="If the attachment follows the naming pattern, then save it in a folder based on the invoice month date in the invoices folder created in the project folder chosen by the user." Condition="[NameMatch = True]" sap:VirtualizedContainerService.HintSize="856,544.8" sap2010:WorkflowViewState.IdRef="If_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="375.2,280.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SaveMailAttachments Attachments="{x:Null}" DisplayName="Save invoice Attachment" FolderPath="[OUT_ProjectFolder+&quot;\&quot;+&quot;Invoices&quot;+&quot;\&quot;+Split(AttachmentName,&quot;_&quot;)(1).Substring(2,2)]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_1" Message="[mail]" />
                        <Assign DisplayName="Reasign NameMatch to false" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[NameMatch]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <TryCatch sap2010:Annotation.AnnotationText="Here if the attachment naming does not follow the naming pattern &quot;CustomerName_InvoiceDate_InvoiceNumber&quot; then it will print exception message." DisplayName="Try Catch Wrong attachment naming" sap:VirtualizedContainerService.HintSize="436.8,351.2" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Throw Exception="[new BusinessRuleException(&quot;Attachment File: &quot;+AttachmentName+&quot; does not follow the right naming pattern&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence sap:VirtualizedContainerService.HintSize="375.2,185.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[exception.Message]" />
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:Comment sap:VirtualizedContainerService.HintSize="333.6,56" sap2010:WorkflowViewState.IdRef="Comment_1" Text="//Do Nothing" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>